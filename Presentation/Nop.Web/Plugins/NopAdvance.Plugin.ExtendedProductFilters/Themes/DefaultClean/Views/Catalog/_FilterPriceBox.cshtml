@model PriceRangeFilterModel

<script asp-exclude-from-bundle="true" src="~/lib_npm/jquery-ui-touch-punch/jquery.ui.touch-punch.min.js" asp-location="Footer"></script>

<div class="product-filter price-range-filter">
    <div class="filter-title">
        <strong>@T("NopAdvance.Plugin.ExtendedProductFilters.Filtering.PriceFilter")</strong>
        @if(extendedFiltersSettings.ShowClearFiltersButton)
        {
            <a class="clear-filters-button" id="clear-price-filter-button">Clear</a>
        }
    </div>
    <div class="filter-content">
        <div class="selected-price-range">
            <span class="from"></span>
            <span class="to"></span>
        </div>
        <div id="price-range-slider"></div>
        <script asp-location="Footer">
            $(document).ready(function () {
                var $priceRangeEl = $("#price-range-slider");
                var $clearButton = $('#clear-price-filter-button');

                $priceRangeEl.slider({
                    range: true,
                    min: @Model.AvailablePriceRange.From,
                    max: @Model.AvailablePriceRange.To,
                    values: [
                        @Model.SelectedPriceRange.From,
                        @Model.SelectedPriceRange.To
                    ],
                    slide: function (event, ui) {
                        setSelectedPriceRange(ui.values[0], ui.values[1]);
                    },
                    stop: function (event, ui) {                  
                        if ($clearButton.length > 0)
                        {      
                            @* Hide clear button if slider values are default values *@
                            if(ui.values[0] == $priceRangeEl.slider('option', 'min')
                            && ui.values[1] == $priceRangeEl.slider('option', 'max'))
                                $clearButton.hide();
                            @* Show clear button otherwise *@
                            else
                                $clearButton.show();
                        }
                        CatalogProducts.getProducts();
                    }
                });

                setSelectedPriceRange(
                    $priceRangeEl.slider("values", 0),
                    $priceRangeEl.slider("values", 1)
                );

                $(CatalogProducts).on('before', function (e) {
                    var priceRange = $priceRangeEl.slider('values');
                    if (priceRange && priceRange.length > 0) {
                        e.payload.urlBuilder
                            .addParameter('price', priceRange.join('-'));
                    }
                });
                
                $priceRangeEl.on('resetSlider', resetSlider);                
                $('.applied-filters .applied-filters-group').trigger('updatePanelElements');
                
                @* Clear button *@
                if ($clearButton.length > 0)
                {
                    $clearButton.on('clearOnly', clearOnly);
                    $clearButton.on('click', function (){
                        resetSlider();
                        return false;
                    });

                    @* Hide clear button if slider values are default values *@
                    if($priceRangeEl.slider('values', 0) == $priceRangeEl.slider('option', 'min')
                    && $priceRangeEl.slider('values', 1) == $priceRangeEl.slider('option', 'max'))
                    {
                        $clearButton.hide();
                    }

                    return false;
                }

                function resetSlider(){
                    clearOnly();
                    CatalogProducts.getProducts();
                    $('.applied-filters .applied-filters-group').trigger('updatePanelElements');                    
                    return false;
                }

                function clearOnly(){
                    var priceLims = [$priceRangeEl.slider('option', 'min'), $priceRangeEl.slider('option', 'max')];
                    $priceRangeEl.slider('values', priceLims);
                    setSelectedPriceRange(priceLims[0], priceLims[1]);
                    if ($clearButton.length > 0)
                        $clearButton.hide();

                    return false;
                }
            });

            function setSelectedPriceRange(from, to) {
                var $selectedPriceRangeEl = $('.selected-price-range');
                $('.from', $selectedPriceRangeEl).html(from);
                $('.to', $selectedPriceRangeEl).html(to);
            }
        </script>
    </div>
</div>
