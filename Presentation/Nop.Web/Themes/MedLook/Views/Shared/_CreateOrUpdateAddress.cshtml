@model AddressModel

<input asp-for="Id" type="hidden" />
<div class="edit-address">
    <div class="inputs">
        <div class="label-container">
            <label asp-for="FirstName" asp-postfix=":"></label>
            <nop-required />
        </div>
        <input asp-for="FirstName" />
        <span asp-validation-for="FirstName"></span>
    </div>
    <div class="inputs">
        <div class="label-container">
            <label asp-for="LastName" asp-postfix=":"></label>
            <nop-required />
        </div>
        <input asp-for="LastName" />
        <span asp-validation-for="LastName"></span>
    </div>

    @if (Model.PhoneEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="PhoneNumber" asp-postfix=":"></label>
                @if (Model.PhoneRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="PhoneNumber" />
            <span asp-validation-for="PhoneNumber"></span>
        </div>
    }
    <div class="inputs">
        <div class="label-container">
            <label asp-for="Email" asp-postfix=":"></label>
            <nop-required />
        </div>
        <input asp-for="Email" />
        <div class="generate-email-buttons">
            <button id="btn-generate-email-info" class="button-2 btn-generate-email">?</button>
            <div id="generate-email-info" title="Email">@T("Email.Generate.Info")</div>
            <button id="btn-generate-email" class="button-2 btn-generate-email">@T("Email.Generate")</button>
            <button id="btn-generate-email-cancel" class="button-2 btn-generate-email">@T("Email.GenerateCancel")</button>
        </div>
        <span asp-validation-for="Email"></span>
        <script asp-location="Footer">
            let originEmail = '';

            $('#btn-generate-email-info').on('click', (event) => {
                $('#generate-email-info').dialog();
                event.preventDefault();
                return false;
            });

            $('#btn-generate-email').on('click', function(event) {
                originEmail = $('#BillingNewAddress_Email').val();
                let phone = $('#BillingNewAddress_PhoneNumber').val();

                if (phone == '')
                    phone = randomString(6);

                $('#BillingNewAddress_Email').val(phone + '@@md.com');
                event.preventDefault();
                return false;
            });

            $('#btn-generate-email-cancel').on('click', function(event){
                $('#BillingNewAddress_Email').val(originEmail);
                event.preventDefault();
                return false;
            });

            function randomString(length) {
                let text = "";
                let possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                for( let i=0; i < length; i++ )
                  text += possible.charAt(Math.floor(Math.random() * possible.length));
                return text;
            }

        </script>
    </div>
    @if (Model.CompanyEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="Company" asp-postfix=":"></label>
                @if (Model.CompanyRequired)
                {
                    <nop-required />
                }
                <input asp-for="Company" />
            </div>
            <span asp-validation-for="Company"></span>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="CountryId" asp-postfix=":"></label>
                <nop-required />
            </div>
            <select asp-for="CountryId" asp-items="Model.AvailableCountries"
                    data-trigger="country-select"
                    data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                    data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                    data-loading="#states-loading-progress"></select>
            <span asp-validation-for="CountryId"></span>
        </div>
    }

    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="inputs">
            <label asp-for="StateProvinceId" asp-postfix=":"></label>
            <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
            <span asp-validation-for="StateProvinceId"></span>
        </div>
    }
    @if (Model.CountyEnabled)
    {
        <div class="inputs">
            <div class="label-container">

                <label asp-for="County" asp-postfix=":"></label>
                @if (Model.CountyRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="County" />
            <span asp-validation-for="County"></span>
        </div>
    }
    @if (Model.CityEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="City" asp-postfix=":"></label>
                @if (Model.CityRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="City" />
            <span asp-validation-for="City"></span>
        </div>
    }
    @if (Model.StreetAddressEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="Address1" asp-postfix=":"></label>
                @if (Model.StreetAddressRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="Address1" />
            <span asp-validation-for="Address1"></span>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="Address2" asp-postfix=":"></label>
                @if (Model.StreetAddress2Required)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="Address2" />
            <span asp-validation-for="Address2"></span>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="ZipPostalCode" asp-postfix=":"></label>
                @if (Model.ZipPostalCodeRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="ZipPostalCode" />
            <span asp-validation-for="ZipPostalCode"></span>
        </div>
    }

    @if (Model.FaxEnabled)
    {
        <div class="inputs">
            <div class="label-container">
                <label asp-for="FaxNumber" asp-postfix=":"></label>
                @if (Model.FaxRequired)
                {
                    <nop-required />
                }
            </div>
            <input asp-for="FaxNumber" />
            <span asp-validation-for="FaxNumber"></span>
        </div>
    }
    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @await Html.PartialAsync("_AddressAttributes", Model.CustomAddressAttributes)
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = "NovaPoshtaValues", additionalData = Model })

    }
</div>
