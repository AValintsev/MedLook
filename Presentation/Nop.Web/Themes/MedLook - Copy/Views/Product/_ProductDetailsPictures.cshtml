@model ProductDetailsModel
<link rel="stylesheet" href="~/lib_npm/magnific-popup/magnific-popup.css" />
<script asp-exclude-from-bundle="true" src="~/lib_npm/magnific-popup/jquery.magnific-popup.min.js" asp-location="Footer"></script>

<div class="picture-gallery">
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsBeforePictures, additionalData = Model })
    <div class="picture">
        <a href="@Model.DefaultPictureModel.FullSizeImageUrl" title="@Model.DefaultPictureModel.Title" id="main-product-img-lightbox-anchor-@Model.Id">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" id="main-product-img-@Model.Id" />
        </a>
    </div>
    @if (Model.PictureModels.Count > 1)
    {
        <div class="swiper picture-thumbs">
            <div class="swiper-wrapper swiper-wrapper-picture-thumbs">
                @foreach (var picture in Model.PictureModels)
                {
                    <div class="swiper-slide">
                        <a class="thumb-item" href="@picture.FullSizeImageUrl" alt="@picture.AlternateText" title="@picture.Title">
                            <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title"
                                 data-defaultsize="@picture.ImageUrl" data-fullsize="@picture.FullSizeImageUrl" />
                        </a>
                    </div>
                }
            </div>
            <div class="swiper-scrollbar"></div>
        </div>

        <script>
            const swiper = new Swiper('.swiper', {
                scrollbar: {
                    el: '.swiper-scrollbar',
                    draggable: true,
                },
                breakpoints: {
                    320: {
                        slidesPerView: 4,
                        spaceBetween: 0
                    },
                    640: {
                        slidesPerView: 5,
                        spaceBetween: 0
                    },
                    1440: {
                        slidesPerView: 6,
                        spaceBetween: 0
                    }
                },
            });
        </script>

        <script asp-location="Footer">
            $(document).ready(function () {
                $('.picture-gallery .picture-thumbs').magnificPopup(
                    {
                        type: 'image',
                        delegate: 'a',
                        removalDelay: 300,
                        gallery: {
                            enabled: true,
                            navigateByImgClick: true,
                            preload: [0, 1],
                            tPrev: '@T("Media.MagnificPopup.Previous")',
                            tNext: '@T("Media.MagnificPopup.Next")',
                            tCounter: '@T("Media.MagnificPopup.Counter")'
                        },
                        tClose: '@T("Media.MagnificPopup.Close")',
                        tLoading: '@T("Media.MagnificPopup.Loading")'
                    });

                $('.picture-gallery .picture > a').on('click', function () { $('.picture-gallery .thumb-item').first().click(); return false; });

            });
        </script>

        <script asp-location="Footer">
            $(document).ready(function () {
                $('.thumb-item > img').on('click',
                    function () {
                        $('#main-product-img-@Model.Id').attr('src', $(this).attr('data-defaultsize'));
                        $('#main-product-img-@Model.Id').attr('title', $(this).attr('title'));
                        $('#main-product-img-@Model.Id').attr('alt', $(this).attr('alt'));
                        $('#main-product-img-lightbox-anchor-@Model.Id').attr('href', $(this).attr('data-fullsize'));
                        $('#main-product-img-lightbox-anchor-@Model.Id').attr('title', $(this).attr('title'));
                    });
            });
        </script>

    }

    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsAfterPictures, additionalData = Model })
</div>